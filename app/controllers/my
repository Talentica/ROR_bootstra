Inspecting 7 files
CCCCCWC

Offenses:

registrations_controller.rb:14:1: C: Missing top-level class documentation comment.
class RegistrationsController < Devise::RegistrationsController
^^^^^
registrations_controller.rb:15:1: C: Trailing whitespace detected.
registrations_controller.rb:16:1: C: Indent access modifiers like private.
private
^^^^^^^
application_controller.rb:1:1: C: Missing top-level class documentation comment.
class ApplicationController < ActionController::Base
^^^^^
application_controller.rb:3:1: C: Incorrect indentation detected (column 0 instead of 2).
# For APIs, you may want to use :null_session instead.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
application_controller.rb:4:1: C: Trailing whitespace detected.
application_controller.rb:13:12: C: Use the new Ruby 1.9 hash syntax.
    render :json => { :Status => 401 ,
           ^^^^^^^^
application_controller.rb:13:23: C: Use the new Ruby 1.9 hash syntax.
    render :json => { :Status => 401 ,
                      ^^^^^^^^^^
application_controller.rb:13:37: C: Space found before comma.
    render :json => { :Status => 401 ,
                                    ^
application_controller.rb:14:23: C: Use the new Ruby 1.9 hash syntax.
                      :Message =>
                      ^^^^^^^^^^^
profiles_controller.rb:14:1: C: Extra blank line detected.
profiles_controller.rb:15:1: C: Missing top-level class documentation comment.
class ProfilesController < ApplicationController
^^^^^
profiles_controller.rb:17:3: C: Missing space after #.
  #before_action :authenticate_user!
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
profiles_controller.rb:27:3: C: Use 2 (not 1) spaces for indentation.
   @user = User.find_by_id(params[:id])
  ^
profiles_controller.rb:32:3: C: Use 2 (not 0) spaces for indentation.
  puts "*******sfsf"
  
profiles_controller.rb:32:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  puts "*******sfsf"
       ^^^^^^^^^^^^^
profiles_controller.rb:51:81: C: Line is too long. [89/80]
        format.html { redirect_to @profile, notice: 'Profile was successfully created.' }
                                                                                ^^^^^^^^^
profiles_controller.rb:55:81: C: Line is too long. [83/80]
        format.json { render json: @profile.errors, status: :unprocessable_entity }
                                                                                ^^^
profiles_controller.rb:60:7: C: Do not prefix reader method names with get_.
  def get_role
      ^^^^^^^^
profiles_controller.rb:61:3: C: Use 2 (not 1) spaces for indentation.
   p params
  ^
profiles_controller.rb:62:5: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !@role.nil?
    ^^
profiles_controller.rb:62:5: C: Inconsistent indentation detected.
    if !@role.nil?
    ^^^^^^^^^^^^^^
profiles_controller.rb:62:5: C: Favor unless over if for negative conditions.
    if !@role.nil?
    ^^^^^^^^^^^^^^
profiles_controller.rb:63:5: C: Use 2 (not 1) spaces for indentation.
     puts @role.class 
    ^
profiles_controller.rb:63:22: C: Trailing whitespace detected.
     puts @role.class 
                     ^
profiles_controller.rb:65:11: C: Use the new Ruby 1.9 hash syntax.
   render :json => @role 
          ^^^^^^^^
profiles_controller.rb:65:25: C: Trailing whitespace detected.
   render :json => @role 
                        ^
profiles_controller.rb:73:81: C: Line is too long. [89/80]
        format.html { redirect_to @profile, notice: 'Profile was successfully updated.' }
                                                                                ^^^^^^^^^
profiles_controller.rb:77:81: C: Line is too long. [83/80]
        format.json { render json: @profile.errors, status: :unprocessable_entity }
                                                                                ^^^
profiles_controller.rb:87:81: C: Line is too long. [93/80]
      format.html { redirect_to profiles_url, notice: 'Profile was successfully destroyed.' }
                                                                                ^^^^^^^^^^^^^
profiles_controller.rb:92:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
profiles_controller.rb:94:5: C: Inconsistent indentation detected.
    def set_profile
    ^^^^^^^^^^^^^^^
profiles_controller.rb:98:81: C: Line is too long. [88/80]
    # Never trust parameters from the scary internet, only allow the white list through.
                                                                                ^^^^^^^^
profiles_controller.rb:99:5: C: Inconsistent indentation detected.
    def profile_params
    ^^^^^^^^^^^^^^^^^^
posts_controller.rb:2:1: C: Missing top-level class documentation comment.
class PostsController < ApplicationController
^^^^^
posts_controller.rb:4:3: C: Missing space after #.
  #before_action :authenticate_user!
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
posts_controller.rb:28:3: C: Assignment Branch Condition size for create is too high. [15.07/15]
  def create
  ^^^
posts_controller.rb:33:81: C: Line is too long. [83/80]
        format.html { redirect_to @post, notice: 'Post was successfully created.' }
                                                                                ^^^
posts_controller.rb:47:81: C: Line is too long. [83/80]
        format.html { redirect_to @post, notice: 'Post was successfully updated.' }
                                                                                ^^^
posts_controller.rb:61:81: C: Line is too long. [87/80]
      format.html { redirect_to posts_url, notice: 'Post was successfully destroyed.' }
                                                                                ^^^^^^^
posts_controller.rb:66:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
posts_controller.rb:68:5: C: Inconsistent indentation detected.
    def set_post
    ^^^^^^^^^^^^
posts_controller.rb:72:81: C: Line is too long. [88/80]
    # Never trust parameters from the scary internet, only allow the white list through.
                                                                                ^^^^^^^^
posts_controller.rb:73:5: C: Inconsistent indentation detected.
    def post_params
    ^^^^^^^^^^^^^^^
aboutus_controller.rb:1:1: C: Missing top-level class documentation comment.
class AboutusController < ApplicationController
^^^^^
aboutus_controller.rb:9:1: C: Extra empty line detected at class body end.
admins_controller.rb:1:1: C: Missing top-level class documentation comment.
class AdminsController < ApplicationController
^^^^^
admins_controller.rb:2:1: C: Use 2 (not 1) spaces for indentation.
 before_action :check_if_admin
^
admins_controller.rb:3:81: C: Line is too long. [95/80]
# before_filter :new ,:only => [:add_members] #execute new before add_members---factory pattern
                                                                                ^^^^^^^^^^^^^^^
admins_controller.rb:5:1: C: Incorrect indentation detected (column 0 instead of 1).
#listing of all admin activites
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:5:1: C: Missing space after #.
#listing of all admin activites
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:7:2: C: Use 2 (not 0) spaces for indentation.
 p "****************index #{params.inspect}"
 
admins_controller.rb:10:3: C: Missing space after #.
  #for admin to add members custom action
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:11:3: C: Inconsistent indentation detected.
  def new
  ^^^^^^^
admins_controller.rb:12:3: C: Use 2 (not 1) spaces for indentation.
   @user = User.new
  ^
admins_controller.rb:15:3: C: Method has too many lines. [11/10]
  def admin_assign_roles
  ^^^
admins_controller.rb:15:3: C: Inconsistent indentation detected.
  def admin_assign_roles
  ^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:16:3: C: Use 2 (not 0) spaces for indentation.
  if params.has_key?("admin_rol") && params.has_key?("user")
  
admins_controller.rb:16:13: C: Hash#has_key? is deprecated in favor of Hash#key?.
  if params.has_key?("admin_rol") && params.has_key?("user")
            ^^^^^^^^
admins_controller.rb:16:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if params.has_key?("admin_rol") && params.has_key?("user")
                     ^^^^^^^^^^^
admins_controller.rb:16:45: C: Hash#has_key? is deprecated in favor of Hash#key?.
  if params.has_key?("admin_rol") && params.has_key?("user")
                                            ^^^^^^^^
admins_controller.rb:16:54: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if params.has_key?("admin_rol") && params.has_key?("user")
                                                     ^^^^^^
admins_controller.rb:17:23: C: Hash#has_key? is deprecated in favor of Hash#key?.
    if params['user'].has_key?("roles")
                      ^^^^^^^^
admins_controller.rb:17:32: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params['user'].has_key?("roles")
                               ^^^^^^^
admins_controller.rb:18:5: C: Use 2 (not 1) spaces for indentation.
     @role ,@message  = Role.bulk_assignment_roles params
    ^
admins_controller.rb:18:11: C: Space found before comma.
     @role ,@message  = Role.bulk_assignment_roles params
          ^
admins_controller.rb:18:12: C: Space missing after comma.
     @role ,@message  = Role.bulk_assignment_roles params
           ^
admins_controller.rb:18:21: C: Unnecessary spacing detected.
     @role ,@message  = Role.bulk_assignment_roles params
                    ^
admins_controller.rb:18:23: C: Operator = should be surrounded by a single space.
     @role ,@message  = Role.bulk_assignment_roles params
                      ^
admins_controller.rb:21:4: C: Inconsistent indentation detected.
   if @message.present?
   ^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:24:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     @notice = "Roles has been assigned Successfully !!"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:26:4: C: Inconsistent indentation detected.
   redirect_to({ action: 'index' }, notice: "#{@notice}")
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:26:45: C: Prefer to_s over string interpolation.
   redirect_to({ action: 'index' }, notice: "#{@notice}")
                                            ^^^^^^^^^^^^
admins_controller.rb:27:2: W: end at 27, 1 is not aligned with def at 15, 2.
 end
 ^^^
admins_controller.rb:28:1: C: Trailing whitespace detected.
admins_controller.rb:29:1: C: Incorrect indentation detected (column 0 instead of 1).
#def show
^^^^^^^^^
admins_controller.rb:29:1: C: Missing space after #.
#def show
^^^^^^^^^
admins_controller.rb:31:2: C: Missing space after #.
 #end
 ^^^^
admins_controller.rb:33:2: C: Incorrect indentation detected (column 1 instead of 2).
 #send parameters to user model to create a new user by admin 
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:33:2: C: Missing space after #.
 #send parameters to user model to create a new user by admin 
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:33:62: C: Trailing whitespace detected.
 #send parameters to user model to create a new user by admin 
                                                             ^
admins_controller.rb:34:3: C: Inconsistent indentation detected.
  def add_members
  ^^^^^^^^^^^^^^^
admins_controller.rb:36:6: C: Inconsistent indentation detected.
     if @user.present?
     ^^^^^^^^^^^^^^^^^
admins_controller.rb:37:6: C: Use 2 (not 3) spaces for indentation.
        redirect_to({ action: 'new' } , notice: "User has been created Successfully !!")
     ^^^
admins_controller.rb:37:38: C: Space found before comma.
        redirect_to({ action: 'new' } , notice: "User has been created Successfully !!")
                                     ^
admins_controller.rb:37:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        redirect_to({ action: 'new' } , notice: "User has been created Successfully !!")
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:37:81: C: Line is too long. [88/80]
        redirect_to({ action: 'new' } , notice: "User has been created Successfully !!")
                                                                                ^^^^^^^^
admins_controller.rb:38:8: C: Align else with if.
       else
       ^^^^
admins_controller.rb:39:8: C: Use 2 (not 1) spaces for indentation.
        redirect_to ({ action: 'new'} )
       ^
admins_controller.rb:39:20: W: (...) interpreted as grouped expression.
        redirect_to ({ action: 'new'} )
                   ^
admins_controller.rb:39:37: C: Space inside } missing.
        redirect_to ({ action: 'new'} )
                                    ^
admins_controller.rb:39:38: C: Space inside parentheses detected.
        redirect_to ({ action: 'new'} )
                                     ^
admins_controller.rb:40:7: W: end at 40, 6 is not aligned with if at 36, 5.
      end 
      ^^^
admins_controller.rb:40:10: C: Trailing whitespace detected.
      end 
         ^
admins_controller.rb:44:2: C: Use 2 (not 1) spaces for indentation.
  @users = User.all
 ^
admins_controller.rb:47:6: C: Do not prefix reader method names with get_.
 def get_users
     ^^^^^^^^^
admins_controller.rb:48:2: C: Use 2 (not 0) spaces for indentation.
 @user = User.get_user(params['term'])
 
admins_controller.rb:50:4: C: Use 2 (not 0) spaces for indentation.
   format.json { render json: @user }  # respond with the created JSON object
   
admins_controller.rb:50:38: C: Unnecessary spacing detected.
   format.json { render json: @user }  # respond with the created JSON object
                                     ^
admins_controller.rb:51:4: W: end at 51, 3 is not aligned with respond_to do |format| at 49, 1.
   end
   ^^^
admins_controller.rb:52:5: C: Trailing whitespace detected.
 end 
    ^
admins_controller.rb:53:1: C: Trailing whitespace detected.
admins_controller.rb:54:3: C: Inconsistent indentation detected.
  def bulk_user_update
  ^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:55:3: C: Use 2 (not 3) spaces for indentation.
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
  ^^^
admins_controller.rb:55:6: C: Favor unless over if for negative conditions.
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:55:34: C: Unnecessary spacing detected.
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
                                 ^
admins_controller.rb:55:64: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
                                                               ^^^^^^^^^
admins_controller.rb:55:81: C: Line is too long. [111/80]
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:55:89: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
     User.bulk_edit @changed_date  if !(@changed_date = params["userchg"].to_a - params["userori"].to_a).empty?
                                                                                        ^^^^^^^^^
admins_controller.rb:56:5: C: Inconsistent indentation detected.
    redirect_to({ action: 'list' })
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
admins_controller.rb:56:17: C: Redundant curly braces around a hash parameter.
    redirect_to({ action: 'list' })
                ^^^^^^^^^^^^^^^^^^
admins_controller.rb:58:1: C: Trailing whitespace detected.
admins_controller.rb:60:2: C: Use 2 (not 1) spaces for indentation.
  @user = User.find_by_id(params['key'])
 ^
admins_controller.rb:63:40: C: Unnecessary spacing detected.
     format.json { render json: @user }  # respond with the created JSON object
                                       ^
admins_controller.rb:64:4: W: end at 64, 3 is not aligned with respond_to do |format| at 62, 2.
   end
   ^^^
users/omniauth_callbacks_controller.rb:1:1: C: Missing top-level class documentation comment.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^^^^^
users/omniauth_callbacks_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:2:1: C: Extra empty line detected at class body beginning.
users/omniauth_callbacks_controller.rb:8:1: C: Use 2 (not -2) spaces for indentation.
p "**********************googe via login*****************"
^^
users/omniauth_callbacks_controller.rb:8:3: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
p "**********************googe via login*****************"
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:10:5: C: Inconsistent indentation detected.
    create
    ^^^^^^
users/omniauth_callbacks_controller.rb:13:1: C: Extra blank line detected.
users/omniauth_callbacks_controller.rb:14:1: C: Extra blank line detected.
users/omniauth_callbacks_controller.rb:17:5: C: Assignment Branch Condition size for create is too high. [18.68/15]
    def create
    ^^^
users/omniauth_callbacks_controller.rb:17:5: C: Method has too many lines. [11/10]
    def create
    ^^^
users/omniauth_callbacks_controller.rb:17:5: C: Inconsistent indentation detected.
    def create
    ^^^^^^^^^^
users/omniauth_callbacks_controller.rb:18:33: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      auth_params = request.env["omniauth.auth"]
                                ^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:20:81: C: Line is too long. [86/80]
      authentication = provider.user_authentications.where(uid: auth_params.uid).first
                                                                                ^^^^^^
users/omniauth_callbacks_controller.rb:21:81: C: Line is too long. [97/80]
      existing_user = current_user || User.where('email = ?', auth_params['info']['email']).first
                                                                                ^^^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:32:5: C: Inconsistent indentation detected.
    def sign_in_with_existing_authentication(authentication)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:36:5: C: Inconsistent indentation detected.
    def create_authentication_and_sign_in(auth_params, user, provider)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
users/omniauth_callbacks_controller.rb:42:5: C: Inconsistent indentation detected.
    def create_user_and_authentication_and_sign_in(auth_params, provider)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

7 files inspected, 132 offenses detected
