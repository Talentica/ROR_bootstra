continue
@user[1].id
@user[1]
@user
continue
params
para,ms
continue
params
continue
params[:url]
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
response.body
continue
JSON.parse(response.body)["response"]["name"]
JSON.parse(response.body)["response"]
JSON.parse(response.body)
response.body
continue
params
UserRole.all
Role.all
continue
Role.find(404)
params
continue
 params.key?("name")
params.key?("id")
params
continue
@created_user.id
response.body
continue
roles["status"]
roles
response.body
continue
response.body
roles
continue
roles
continue
created_role
continue
JSON.parse(response.body)["status"]
response.body["status"]
response.body
continue
created_roles
continue
created_roles
continue
role
build(:role)
created_roles
continue
created_user_id["message"]["id"]
created_user_id
continue
c["message"]["id"]
c["message"]
c = JSON.parse(response.body)
JSON.parse(response.body)
JSON.parse(response.body["message"])
JSON.parse(response.body)
JSON.parse(response.body["message"])
 JSON.parse(response.body["message"]["id"])
response.body.class
response.body["message"]
response.body
response.body["message"]["id"]
created_user_id
continue
JSON.parse(response.body)["message"]["id"]
JSON.parse(response.body)["errors"]
JSON.parse(response.body).class
JSON.parse(response.body)
created_user
response.body
continue
created_user
continue
response.body
continue
attributes_for(:user)
user
response.body
continue
m
n
nnnnnnnn
n
authentication
n
continue
params
continue
filtered_data
continue
filtered_data
continue
filtered_data
continue
filtered_data
continue
user_new_hash
continue
user_new_hash
@tmp_hash
continue
user_new_hash
@tmp_hash
continue
user_info.to_h
user_info
continue
params["userchg"].to_a - params["userori"].to_a
continue
params["userchg"].to_a - params["userori"].to_a
continue
params["userchg"].to_a - params["userori"].to_a
continue
 params["userchg"].to_a - params["userori"].to_a
@changed_date
continue
params["userchg"].to_a - params["userori"].to_a
params["userchg"].to_a - params["userori"].to_a)
params["userchg"]
params["userchg"
params["userori"]
continue
params
continue
compulsory_keys - except_params.keys
compulsory_keys
params
continue
params
continue
params
continue
response
continue
response
continue
response
continue
response
continue
diff
diff & compulsory_keys
diff
continue
compulsory_keys - except_params.keys
except_params.keys
continue
compulsory_keys - except_params.keys
continue
diff
diff & keys
diff
except_params.keys
continue
diff
continue
diff
continue
[1,2,3] - [1,4]
[1,2,3] - [1]
["firstname", "lastname", "email", "password"] - ["image", "firstname"]
["firstname", "lastname", "email", "password"] - ["image"]
["firstname", "lastname", "email", "password"] - []
except_params.keys
[] - except_params.keys
["firstname", "image"] - ["firstname", "lastname", "email", "password"]
["firstname", "lastname", "email", "password"] - ["firstname", "image"]
except_params.keys
keys
diff
diff & keys
continue
 diff
diff & keys
continue
diff
diff & keys
continue
response
continue
diff
diff_exist
continue
diff
 diff_exist
continue
mandatory_keys_for_signup.class
mandatory_keys_for_signup
method_name
continue
diff
diff_exist
continue
diff
diff_exist
continue
diff
diff_exist
continue
diff
diff_exist
continue
(diff & mandatory_keys_for_signup).empty?
diff
continue
params.except(:action,:controller).keys - mandatory_keys_for_signup
mandatory_keys_for_signup
diff
params
continue
diff
diff_exist
continue
response.password
response.epassword
response.encrypted_password
response.email
response.password
response,password
response
continue
user.errors
continue
user
continue
user
continue
params
continue
params["user"]
params["user"]["firstname"]
continue
